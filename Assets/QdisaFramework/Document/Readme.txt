
***************************所有功能都需要引用Qdisa空间******************************

1、项目整体构架：即项目中的Manager文件夹，以BaseManager为基础类，各项Manager继承，
                                  GameManager继承自MonoBehaviour，可以在unityHierarchy中的
								  GameManager物体上绑定，所有的Manager在GameManager中Init、Update，
								  以实现MonoBehaviour的生命周期。 如何使用在ExampleController中体现。
								  现将其与框架单独文件夹，进行中的项目导入框架时，可以考虑不导入这个文件夹。
2、FSM状态机：项目中经常会用到状态机，可以实现模型动画的状态控制，或者项目中多状态切换，
                               对于我们现阶段的项目状态不多却存在多种状态切换即为好用，而且便于扩展。
	  优点:
      使代码整洁,状态容易扩展和管理。
      可复用。
      缺点:还没想到..... 
      所有脚本在FSM文件夹中。
3、计时器：每个项目几乎都会用到的计时器功能，采用链式编程，一行代码实现各种功能，
                      拥有开始计时、暂停、重新开始、以及计时过程中做什么、完成时做什么，总之功能很
					  强大。

4、单例模式：提供一个全局访问点，当单例模式的脚本被使用时会有且仅有一个挂载单例脚本的物体
                          被创建。

5、实例化内存池：为了避免多次生成prefab对象造成的性能损耗、卡顿，此功能来自PoolManager。
                                  简单易用，对于Audio、Particle这种自带生命周期的物体，生成播放后会自动
								  false。在PoolExample中提供了实例方法。具体详情见PoolManager文档。
                                  PoolManager开发文档： http://poolmanager.path-o-logical.com/

6、编辑器工具：对Inspector进行扩展，添加一键复制、一键粘贴、小数点、一键修改Scale等功能。

7、菜单栏工具：点击菜单栏Qdisa工具/全屏置顶功能即可（需要场景中存在camera），
                              点击菜单栏Qdisa工具/ 窗口无边框实现窗口化并在相机上找到WindowManager
								组件设置窗口化分辨率。

8、网络模块：	 TCP通信协议服务端客户端，具有分包粘包功能，同时客户端有心跳包，
                            服务器客户端无开关先后顺序和断线重连机制。发送的数据为前四个字节为数据长度，
							且为高位字节。顾心跳包为空字符加上四个字节的数据长度，数据长度为0表示为
							16进制为00000000。